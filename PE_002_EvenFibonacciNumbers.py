from time import time

# == Project Euler: Problem 2 ==================================================================== #
"""
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By
starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the
sum of the even-valued terms.
"""

# == Solution 1 ================================================================================== #


def get_fibonacci_sequence(upperbound):
    sequence = [1, 2]

    while True:
        number = sequence[-1] + sequence[-2]

        if number > upperbound:
            break

        else:
            sequence.append(number)

    return sequence


def solution_1(upperbound=4000000):
    time_elapsed = time()
    total = 0

    for number in get_fibonacci_sequence(upperbound):

        if number % 2 == 0:
            total += number

    time_elapsed = (time() - time_elapsed) * 1000

    print(f'The answer is: {total}')
    print(f'That took {time_elapsed}ms')


